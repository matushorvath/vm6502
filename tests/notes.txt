ca65 test.s -o tmp.o
ld65 -C ld65.cfg tmp.o -o tmp.bin
hexdump -C tmp.bin

echo clc | ./assemble.sh | hd

echo abc | hexdump -ve '/1 ",%02x"'
,61,62,63,0a
echo abc | hexdump -ve '/1 ",%02d"'
,97,98,99,10


msbasic:
memory.s:154, rts returns wrong?
because jsr stores wrong return address to stack? init.s:400 jsr REASON

string.s:61 is last valid instruction, LDA indirect,Y
next is 0c invalid opcode

string.s:533 is the last JSR before crash


looks OK:
up to c930: RTS(60)
up to d1e9: ADC(65) STRNG1(c4)
suspect that ADC is not working, it's the first ADC executed

for (let i = 0; i < 11; i++) console.log(String.fromCharCode(this.mem[0xe04e + i]))
MEMORY SIZE

d1d5: LDA(b1) STRNG1(c4)
STRNG1 is c4
this.mem[0xc4]
78=4e
this.mem[0xc5]
224=e0
this.mem[0xe04e] is start of the string "MEMORY SIZE"


    .ifndef CONFIG_NO_LINE_EDITING
        cmp     #$20
      .ifdef AIM65
        bcc     L244E
      .else
        bcc     INLIN2
      .endif
hypothesis: bcc L244E jumps in VM, but are we handling carry correctly in CMP instruction?
hypothesis: BASIC is waiting for 0D, but linux only sends 0A, we may need to insert 0D
